version: "3.3"

services:
  database:
    image: postgres:14-alpine
    container_name: kpz-postgresql-database
    restart: unless-stopped
    environment:
      POSTGRES_USER: kpz-dev
      POSTGRES_PASSWORD: kpz
      POSTGRES_DB: lost_animals
    volumes:
      - kpz-db-data:/var/lib/postgresql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "127.0.0.1:5433:5432"
    networks:
      - app-db
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost:5433"]
      interval: 10s
      timeout: 1s
      retries: 3
    profiles:
      - frontend
      - backend

  database-env:
    build: .
    container_name: dbeaver
    restart: unless-stopped
    networks:
      - app-db
    depends_on:
      - database
    volumes:
      - dbeaver-data:/var/cloudbeaver/workspace:/opt/cloudbeaver/workspace
    ports:
      - "9090:8978"
    expose:
      - 9090
    profiles:
      - frontend

  backend-app:
    container_name: kpz-backend-app
    image: marcinlenki/kpz-backend:latest
    networks:
      - app-db
    ports:
      - "8080:8080"
    depends_on:
      - database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/lost_animals
      - SPRING_DATASOURCE_USER=kpz-dev
      - SPRING_DATASOURCE_PASSWORD=kpz
    profiles:
      - frontend

volumes:
  kpz-db-data:
  dbeaver-data:

networks:
  app-db:
